'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SimpleLineSvg = exports.AwesomeSvg = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _icons = require('../icons');

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SvgFontIcons = function (_PureComponent) {
  _inherits(SvgFontIcons, _PureComponent);

  function SvgFontIcons() {
    _classCallCheck(this, SvgFontIcons);

    return _possibleConstructorReturn(this, (SvgFontIcons.__proto__ || Object.getPrototypeOf(SvgFontIcons)).apply(this, arguments));
  }

  _createClass(SvgFontIcons, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          name = _props.name,
          size = _props.size,
          className = _props.className,
          sets = _props.sets;


      var icon = _icons2.default[sets][name];
      var customClassName = !className ? 'svg__icon' : 'svg__icon ' + className;

      if (!icon) {
        return null;
      }

      return _react2.default.createElement(
        'svg',
        _extends({
          xmlns: 'http://www.w3.org/2000/svg',
          'aria-hidden': 'true',
          width: size,
          height: size,
          className: customClassName,
          viewBox: icon.view
        }, this.props),
        _react2.default.createElement('path', { d: icon.d })
      );
    }
  }]);

  return SvgFontIcons;
}(_react.PureComponent);

SvgFontIcons.propTypes = {
  name: _propTypes2.default.string.isRequired,
  size: _propTypes2.default.string,
  sets: _propTypes2.default.string,
  className: _propTypes2.default.string,
  fill: _propTypes2.default.string
};

SvgFontIcons.defaultProps = {
  sets: 'fontAwesome',
  size: '1rem',
  className: null
};

var AwesomeSvg = exports.AwesomeSvg = function AwesomeSvg(props) {
  return _react2.default.createElement(SvgFontIcons, _extends({ sets: 'fontAwesome' }, props));
};
var SimpleLineSvg = exports.SimpleLineSvg = function SimpleLineSvg(props) {
  return _react2.default.createElement(SvgFontIcons, _extends({ sets: 'simpleLineIcon' }, props));
};

exports.default = SvgFontIcons;